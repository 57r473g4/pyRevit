<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pyRevit blog</title>
    <description>IronPython scripts for Autodesk Revit
</description>
    <link>http://eirannejad.github.io/pyRevit/</link>
    <atom:link href="http://eirannejad.github.io/pyRevit/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 02 Dec 2017 21:12:27 -0800</pubDate>
    <lastBuildDate>Sat, 02 Dec 2017 21:12:27 -0800</lastBuildDate>
    <generator>Jekyll v3.6.2</generator>
    
      <item>
        <title>pyRevit v4.5-rc</title>
        <description>&lt;div style=&quot;position: relative; width: 100%; height: 0px; padding-bottom: 60%;&quot;&gt;
&lt;iframe style=&quot;position: absolute; left: 0px; top: 0px; width: 100%; height: 100%&quot; src=&quot;https://www.youtube.com/embed/C4kL2MQo7rU&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&quot;installer&quot;&gt;Installer?&lt;/h2&gt;

&lt;p&gt;Download the v4.5-rc installer from &lt;a href=&quot;https://github.com/eirannejad/pyRevit/releases/download/v4.5-rc/pyRevitSetup-v45rc.exe&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 02 Dec 2017 10:30:00 -0800</pubDate>
        <link>http://eirannejad.github.io/pyRevit/pyrevit/update/2017/12/02/45rc.html</link>
        <guid isPermaLink="true">http://eirannejad.github.io/pyRevit/pyrevit/update/2017/12/02/45rc.html</guid>
        
        
        <category>pyrevit</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>SUPER IMPORTANT</title>
        <description>&lt;p&gt;Whadup whadup whadup!&lt;/p&gt;

&lt;p&gt;Worked really hard this passed two weeks to get pyRevit v4.5-beta ready for y’all. I’m only posting about it here though since this is a beta version and not everyone should install this since it’s a developer test release.&lt;/p&gt;

&lt;p&gt;Watch this video here. I’ll take you through this long article in the video to make it simpler:&lt;/p&gt;

&lt;div style=&quot;position: relative; width: 100%; height: 0px; padding-bottom: 60%;&quot;&gt;
&lt;iframe style=&quot;position: absolute; left: 0px; top: 0px; width: 100%; height: 100%&quot; src=&quot;https://www.youtube.com/embed/Szci9_WxDaU&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h2 id=&quot;why-do-i-need-to-install-this&quot;&gt;(Why) Do I need to install this?&lt;/h2&gt;

&lt;p&gt;The purpose of this release is to allow (you) developers to test the new pyRevit core (&lt;a href=&quot;https://www.youtube.com/watch?v=6z_6KmeEc08&quot;&gt;watch this&lt;/a&gt;). There are some changes that might affect your scripts if you have used any of the &lt;code class=&quot;highlighter-rouge&quot;&gt;revitutils&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;scriptutils&lt;/code&gt; modules from pyRevit.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;IF&lt;/strong&gt; you have developed your own python scripts that run under pyRevit, you need to install this beta version and start modifying and adjusting your scripts.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ELSE IF&lt;/strong&gt; you want to deploy pyRevit in your company DO NOT USE this version since it’s just a beta release. I’ll let you know when v4.5 final release is here.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ELSE&lt;/strong&gt; you don’t develop scripts and want to use the pyRevit standard tools, I’d suggest waiting for the v4.5 final release, although you can install this and test it out. Just don’t get mad if something breaks.&lt;/p&gt;

&lt;h2 id=&quot;what-has-changed&quot;&gt;What has changed?&lt;/h2&gt;

&lt;p&gt;Okay here is a quick list of the major changes. I’ll explain each one in detail:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;pyRevit has a new &lt;strong&gt;Rocket mode&lt;/strong&gt;. In this mode, pyRevit runs all the tools in an extension, using a single IronPython engine to increase performance. Currently this feature is experimental &lt;strong&gt;but will be the default pyRevit setting for version 4.6&lt;/strong&gt;. You’ll have the rest of 2017 to revise and adjust your scripts (not many changes)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;revitutils&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;scriptutils&lt;/code&gt; have been removed (&lt;a href=&quot;http://eirannejad.github.io/pyRevit/pyrevit/update/2017/04/01/revitutilsimprovements.html&quot;&gt;Read this&lt;/a&gt;). There is a single module for pyRevit now and it’s &lt;code class=&quot;highlighter-rouge&quot;&gt;pyrevit&lt;/code&gt;. The functionality of &lt;code class=&quot;highlighter-rouge&quot;&gt;revitutils&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;scriptutils&lt;/code&gt; modules have been moved inside the main &lt;code class=&quot;highlighter-rouge&quot;&gt;pyrevit&lt;/code&gt; module. This is related to the changes required to make the &lt;strong&gt;Rocket mode&lt;/strong&gt; work correctly.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;pyRevit has a new Dynamo compatibility mode. It runs everything under IronPython 2.3.0 which matches the Dynamo IronPython version. You need to test your tools under this mode as well if you want to use it. Everything should be fine but just in case. Watch for &lt;code class=&quot;highlighter-rouge&quot;&gt;unicode&lt;/code&gt; changes specifically if you deal with unicode characters.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;pyRevit does not run IronPython in FullFrame mode anymore. You need to set &lt;code class=&quot;highlighter-rouge&quot;&gt;__fullframeengine__ = True&lt;/code&gt; in your script to request a FullFrame engine for your script. This is usually completely unnecessary unless you’re using complex modules like &lt;code class=&quot;highlighter-rouge&quot;&gt;requests&lt;/code&gt; that require a FullFrame engine&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;requests&lt;/code&gt; is shipped with pyRevit now.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;You can Win+Shift click on pyRevit tools now and it’ll display a context menu with some options. It’ll show useful information about the script and will let you open the help link for the tool (e.g. youtube videos) or copy information about the script to the clipboard.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;This doesn’t affect you but it’s good to know:&lt;/strong&gt; pyRevit used to include all the python standard library in its folder structure under &lt;code class=&quot;highlighter-rouge&quot;&gt;pylib&lt;/code&gt;. Starting with version 4.5 they’ve been moved to a zip file that is attached to the executing IronPython engine and &lt;code class=&quot;highlighter-rouge&quot;&gt;pylib&lt;/code&gt; doesn’t exist anymore. This has two benefits:
    &lt;ul&gt;
      &lt;li&gt;One is that it allows pyRevit to switch its IronPython engine easily (e.g. use 2.7.7 or 2.3.0 and include the correct standard library for each engine)&lt;/li&gt;
      &lt;li&gt;Removing all those files from the installation saves space.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;This also doesn’t affect you but it’s good to know:&lt;/strong&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;lib&lt;/code&gt; folder inside pyRevit that include third-party modules that I ship with pyRevit, is now renamed to &lt;code class=&quot;highlighter-rouge&quot;&gt;site_packages&lt;/code&gt; to match the standard python folder for third-party packages.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;whats-rocket-mode&quot;&gt;What’s Rocket mode?&lt;/h2&gt;

&lt;p&gt;Let’s talk more about &lt;strong&gt;Rocket mode&lt;/strong&gt; though an example, and I’ll promise it’ll all make sense at the end.&lt;/p&gt;

&lt;h3 id=&quot;why-do-i-need-rocket-mode&quot;&gt;Why do I need Rocket mode?&lt;/h3&gt;

&lt;p&gt;OMG it’s FAST!!!! And also uses less memory.&lt;/p&gt;

&lt;h3 id=&quot;what-do-i-have-to-change-to-make-my-tools-work-under-rocket-mode&quot;&gt;What do I have to change to make my tools work under Rocket mode?&lt;/h3&gt;

&lt;p&gt;Not much. Just don’t use &lt;code class=&quot;highlighter-rouge&quot;&gt;doc&lt;/code&gt; or &lt;code class=&quot;highlighter-rouge&quot;&gt;uidoc&lt;/code&gt; globally in your modules. I explain this in detail below. Your scripts are fine since the &lt;code class=&quot;highlighter-rouge&quot;&gt;script.py&lt;/code&gt; in your pyRevit tool is still being executed every time you run the tool. It’s just that if you have modules that are shared between scripts, you need to make sure you’re not using any volatile objects in them globally. This is really a programming best practice and has less to do with the Rocket mode.&lt;/p&gt;

&lt;h3 id=&quot;what-happend-to-scriptutils&quot;&gt;What happend to &lt;code class=&quot;highlighter-rouge&quot;&gt;scriptutils&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Let’s talk about the more widely used &lt;code class=&quot;highlighter-rouge&quot;&gt;scriptutils&lt;/code&gt; module first.&lt;/p&gt;

&lt;p&gt;For example, here is how you are using the &lt;code class=&quot;highlighter-rouge&quot;&gt;linkify()&lt;/code&gt; method on the pyRevit output:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;scriptutils&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;this_script&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;this_script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linkify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;some_element_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Rocket mode doesn’t like this. Why? Because &lt;code class=&quot;highlighter-rouge&quot;&gt;this_script&lt;/code&gt; is a python object instance that’s defined globally inside the &lt;code class=&quot;highlighter-rouge&quot;&gt;scriptutils&lt;/code&gt; module so you can import it in your script easily. &lt;code class=&quot;highlighter-rouge&quot;&gt;this_script&lt;/code&gt; represents the currently running script. It provides functionality to support the script running in pyRevit environment like providing information about it or giving access to the output window.&lt;/p&gt;

&lt;p&gt;But Rocket mode shares the IronPython engine with multiple tools and it will keep it in memory so it can run the other tools inside the same engine to speed them up. This means that &lt;code class=&quot;highlighter-rouge&quot;&gt;this_script&lt;/code&gt; will always represent the first script that was executed under the Rocket mode engine and it’ll mess up the behaviour of other tools since it does not represent them!&lt;/p&gt;

&lt;p&gt;The solution is to &lt;strong&gt;not&lt;/strong&gt; have a globally defined instance. So each script needs to ask for an instance of this class, to be able to access the functionality.&lt;/p&gt;

&lt;p&gt;Here is how you would modify the snippet above for the new pyRevit core:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pyrevit&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;output&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;linkify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;some_element_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;highlighter-rouge&quot;&gt;output&lt;/code&gt; object is exactly as it was before. You can still use the same methods for making charts and adjust the window size and whatnot. The only thing that has changed is how you’d ask for this &lt;code class=&quot;highlighter-rouge&quot;&gt;output&lt;/code&gt; object.&lt;/p&gt;

&lt;p&gt;And here is how you need to import other objects from the new &lt;code class=&quot;highlighter-rouge&quot;&gt;script&lt;/code&gt; module:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# script logger&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# currently:&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 	from scriptutils import logger&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# in v4.5:&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pyrevit&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;logger&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_logger&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;



&lt;span class=&quot;c&quot;&gt;# results object to report results for the usage logs&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# currently:&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 	from scriptutils import this_script&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 	this_script.results.timesaved = 10&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# in v4.5:&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pyrevit&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;results&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_results&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;results&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timesaved&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;



&lt;span class=&quot;c&quot;&gt;# script configuration&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# currently:&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 	from scriptutils import this_script&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 	this_script.config.somesetting = somevalue&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#	this_script.save_config()&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# in v4.5:&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pyrevit&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;somesetting&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;somevalue&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;save_config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;



&lt;span class=&quot;c&quot;&gt;# getting script-only data files&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# currently:&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 	this_script.get_universal_data_file()&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# in v4.5:&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pyrevit&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;datafile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_universal_data_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;



&lt;span class=&quot;c&quot;&gt;# opening a url in browser&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# currently:&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 	from scriptutils import open_url&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#	open_url(url)&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# in v4.5:&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pyrevit&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;open_url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;c&quot;&gt;# info about the script&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pyrevit&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;script_info&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;See &lt;code class=&quot;highlighter-rouge&quot;&gt;pyrevitlib/pyrevit/script.py&lt;/code&gt; for full functionality. I’m documenting all the core scripts for the v4.5 final release.&lt;/p&gt;

&lt;h3 id=&quot;what-happend-to-revitutils&quot;&gt;What happend to &lt;code class=&quot;highlighter-rouge&quot;&gt;revitutils&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;Some of you noticed that I had been importing &lt;code class=&quot;highlighter-rouge&quot;&gt;doc&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;uidoc&lt;/code&gt; from &lt;code class=&quot;highlighter-rouge&quot;&gt;revitutils&lt;/code&gt; in my scripts. Well this has radically changed due to the exact same issues with the Rocket mode. I had a global &lt;code class=&quot;highlighter-rouge&quot;&gt;doc&lt;/code&gt; object in &lt;code class=&quot;highlighter-rouge&quot;&gt;revitutils&lt;/code&gt; module that would remain in memory under the new pyRevit core. This means that if the user closes the current document/model in Revit and opens another one, the &lt;code class=&quot;highlighter-rouge&quot;&gt;doc&lt;/code&gt; object is still pointing to the same document that is closed now and it would break my scripts.&lt;/p&gt;

&lt;p&gt;I have removed the &lt;code class=&quot;highlighter-rouge&quot;&gt;revitutils&lt;/code&gt; and moved the functionality inside the &lt;code class=&quot;highlighter-rouge&quot;&gt;pyrevit&lt;/code&gt; module. You should revise your scripts to use &lt;code class=&quot;highlighter-rouge&quot;&gt;rpw&lt;/code&gt; instead of &lt;code class=&quot;highlighter-rouge&quot;&gt;revitutils&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;GENERALLY DONT USE ANY PYREVIT MODULE OTHER THAN &lt;code class=&quot;highlighter-rouge&quot;&gt;script&lt;/code&gt;. ALWAYS USE THE &lt;code class=&quot;highlighter-rouge&quot;&gt;rpw&lt;/code&gt; module for anything you need since it’s designed to wrap the Revit API and is also included in pyRevit installation.&lt;/p&gt;

&lt;p&gt;So change this:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;revitutils&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;uidoc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UI&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;to this:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;rpw&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;revit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;UI&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;revit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;doc&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;revit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;uidoc&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;what-if-i-dont-want-to-use-the-rocket-mode&quot;&gt;What if I don’t want to use the Rocket mode:&lt;/h3&gt;

&lt;p&gt;You still have to do all the changes above since they’re module changes. If you don’t want to support the Rocket mode you’ve got two ways:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;ONE:&lt;/strong&gt; Add this to your script:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;__cleanengine__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This tells pyRevit to run your tool in a clean engine and not a reused engine.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;TWO:&lt;/strong&gt; Set your extension to not-compatible with Rocket mode in your &lt;code class=&quot;highlighter-rouge&quot;&gt;extension.json&lt;/code&gt; file&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;s2&quot;&gt;&quot;rocket_mode_compatible&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;False&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This tells pyRevit that all the tools in this extension are not Rocket mode compatible and they all need to be running in a clean engine.&lt;/p&gt;

&lt;h2 id=&quot;whats-the-deal-about-the-winshift-click&quot;&gt;What’s the deal about the Win+Shift click?&lt;/h2&gt;

&lt;p&gt;Here is how to add a help/youtube link to your tools:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;__helpurl__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'http://link.to.your.help.page.or.youtube.video'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;where-is-the-installer&quot;&gt;Where is the installer?&lt;/h2&gt;

&lt;p&gt;Download the v4.5-beta installer from &lt;a href=&quot;https://github.com/eirannejad/pyRevit/releases/download/v4.5-beta/pyRevitSetup-v45beta.exe&quot;&gt;here&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 08 Nov 2017 10:30:00 -0800</pubDate>
        <link>http://eirannejad.github.io/pyRevit/pyrevit/update/2017/11/08/45beta.html</link>
        <guid isPermaLink="true">http://eirannejad.github.io/pyRevit/pyrevit/update/2017/11/08/45beta.html</guid>
        
        
        <category>pyrevit</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Shhhhh</title>
        <description>&lt;p&gt;Hey all,
I’m done with the changes on pyRevit v4.5-beta but making the video and writing the article on the changes is taking longer than expected.&lt;/p&gt;

&lt;p&gt;Basically while writing the article I realized I really need to make a video on this to make it clear. There are not many changes, it’s just that I need to explain some stuff so you understand the reasons better.&lt;/p&gt;

&lt;p&gt;Give me two more days and I’ll publish both soon.&lt;/p&gt;
</description>
        <pubDate>Sun, 05 Nov 2017 10:30:00 -0800</pubDate>
        <link>http://eirannejad.github.io/pyRevit/pyrevit/update/2017/11/05/Shhhhh.html</link>
        <guid isPermaLink="true">http://eirannejad.github.io/pyRevit/pyrevit/update/2017/11/05/Shhhhh.html</guid>
        
        
        <category>pyrevit</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>pyRevit Library Extensions</title>
        <description>&lt;p&gt;I have written about the pyRevit library extensions on the pyRevit pages on this blog but this is a video of how to actually setup python libraries that are shared between multiple tools or multiple pyRevit extensions.&lt;/p&gt;

&lt;div style=&quot;position: relative; width: 100%; height: 0px; padding-bottom: 60%;&quot;&gt;
&lt;iframe style=&quot;position: absolute; left: 0px; top: 0px; width: 100%; height: 100%&quot; src=&quot;https://www.youtube.com/embed/Z3sFomss6Ks?showinfo=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
        <pubDate>Sat, 21 Oct 2017 11:30:00 -0700</pubDate>
        <link>http://eirannejad.github.io/pyRevit/pyrevit/extension/2017/10/21/libextensions-copy.html</link>
        <guid isPermaLink="true">http://eirannejad.github.io/pyRevit/pyrevit/extension/2017/10/21/libextensions-copy.html</guid>
        
        
        <category>pyrevit</category>
        
        <category>extension</category>
        
      </item>
    
      <item>
        <title>pyRevit 4.5 Road Map</title>
        <description>&lt;p&gt;Hey all,
I posted this video and forgot about posting a blog post on it. Here is the YouTube video on the pyRevit road map for versions 4.5 and 4.6&lt;/p&gt;

&lt;p&gt;Please feel free to comment here with any improvement ideas.&lt;/p&gt;

&lt;div style=&quot;position: relative; width: 100%; height: 0px; padding-bottom: 60%;&quot;&gt;
&lt;iframe style=&quot;position: absolute; left: 0px; top: 0px; width: 100%; height: 100%&quot; src=&quot;https://www.youtube.com/embed/6z_6KmeEc08?showinfo=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
        <pubDate>Sat, 21 Oct 2017 11:00:00 -0700</pubDate>
        <link>http://eirannejad.github.io/pyRevit/pyrevit/update/2017/10/21/45roadmap.html</link>
        <guid isPermaLink="true">http://eirannejad.github.io/pyRevit/pyrevit/update/2017/10/21/45roadmap.html</guid>
        
        
        <category>pyrevit</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>pyRevit Seed Config</title>
        <description>&lt;p&gt;Hey all,&lt;/p&gt;

&lt;p&gt;Alongside the continuous updates and bug fixes, one specific change stands out as more important and I’ll describe it here:&lt;/p&gt;

&lt;h3 id=&quot;setting-pyrevit-seed-configuration-file&quot;&gt;Setting pyRevit seed configuration file:&lt;/h3&gt;

&lt;h4 id=&quot;the-change&quot;&gt;The change:&lt;/h4&gt;
&lt;p&gt;At Revit startup, if pyRevit can not find its configuration file under &lt;code class=&quot;highlighter-rouge&quot;&gt;%appdata%/pyRevit&lt;/code&gt;, it will look into &lt;code class=&quot;highlighter-rouge&quot;&gt;%programdata%/pyRevit&lt;/code&gt; for any file with extension &lt;code class=&quot;highlighter-rouge&quot;&gt;.ini&lt;/code&gt; and will copy that into &lt;code class=&quot;highlighter-rouge&quot;&gt;%appdata%/pyRevit&lt;/code&gt; and will use as its default config.&lt;/p&gt;

&lt;p&gt;If no config is found under &lt;code class=&quot;highlighter-rouge&quot;&gt;%programdata%/pyRevit&lt;/code&gt; either, it will default to the hard-coded configuration as before.&lt;/p&gt;

&lt;p&gt;This sets the initial configuration for pyRevit but does not limit the users ability to modify the config using the Settings tools later on (If you want to limit the user access to pyRevit config, you can modify the pyRevitCore extension and remove the settings tool. This is more advanced so make sure you watch the pyRevit YouTube videos on managing extensions).&lt;/p&gt;

&lt;h4 id=&quot;more-info-on-the-change&quot;&gt;More info on the &lt;a href=&quot;https://github.com/eirannejad/pyRevit/commit/1ed3bcf2eb999d48107cbe03dea2efdd9bdf51c2&quot;&gt;change&lt;/a&gt;:&lt;/h4&gt;

&lt;p&gt;The change request came up from a user that is setting up pyRevit with his custom company extensions in a large environment and wanted to set the default initial configuration in pyRevit. Here is the original request, verbatim:&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Hi Ehsan,&lt;/p&gt;

  &lt;p&gt;Thanks for your comment responses on your blog. I’m going to try explain in a bit more detail what I was suggesting. If you prefer me posting this on Github, please let me know and I will do that.&lt;/p&gt;

  &lt;p&gt;My suggestion is based on how a good number of other addins handle default settings. For example Revit handles the Revit.ini file in a very similar way, where the user settings file is set up by copying a version stored in the UserDataCache folder. So we create a custom file and copy it there (ex: C:\ProgramData\Autodesk\RVT 2018\UserDataCache\Revit.ini) by coding this within the install script. When Revit is opened the first time by the user, it sets up the user version of the Revit.ini file (in %appdata%\Autodesk\Revit\Autodesk Revit 2018 for example) by simply making a copy of the one in UserDataCache.&lt;/p&gt;

  &lt;p&gt;When we push install via SCCM, the install script uses the SYSTEM account and cannot do anything in the user profile (it has no access to %appdata%; there is no User context for that account and in fact can install while the machine is logged off), so the above description of how Revit works enables us to distribute common settings easily. If we need to make changes to the user copy, we have to do that via a separate login script which operates in the User context and thus has access to %appdata%. However that represents a lot of extra work and tracking of things (we have to then be very careful not to alter settings that the user might have customized). A few addins  that utilize a very similar concept of having a firmwide standard settings file somewhere in ProgramData that then becomes the basis of the user settings file in %appdata% are the CTC Revit Express Tools and  Revolution Design’s workFlow tools such as autoLink. The latter actually uses a copy of the settings file located within the application folder (Program Files (x86)) as the “seed” settings file.&lt;/p&gt;

  &lt;p&gt;So my suggestion is to simply provide for the ability to place a settings file somewhere convenient within the pyRevit folder in ProgramData (this could be optional). Once pyRevit starts up the first time and sets up the user profile settings file (in %appdata%), it would simply use a copy of this file if it exists in the ProgramData path and if not, sets up the copy with default settings as it is already doing right now. I hope this clarifies the issue and as always, thanks again for your work!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;The current challenge is that pyRevit saves its configuration under &lt;code class=&quot;highlighter-rouge&quot;&gt;%appdata%/pyRevit&lt;/code&gt; and this means that the sysAdmin needs to write a separate login script which operates in the user context to be able to write the desired initial pyRevit configuration to this directory. (System user does not have access to user private folders that includes the &lt;code class=&quot;highlighter-rouge&quot;&gt;%appdata%&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;At Revit startup, pyRevit will look into the &lt;code class=&quot;highlighter-rouge&quot;&gt;%appdata%/pyRevit&lt;/code&gt; folder to find its configuration. If it does NOT find the config, it sets to create a default configuration file. Up to now, pyRevit would create this default config file based on the configuration baked into the pyRevit code.&lt;/p&gt;

&lt;p&gt;But now, at Revit startup, if pyRevit can not find its configuration file under &lt;code class=&quot;highlighter-rouge&quot;&gt;%appdata%/pyRevit&lt;/code&gt;, it will look into &lt;code class=&quot;highlighter-rouge&quot;&gt;%programdata%/pyRevit&lt;/code&gt; for any file with extension &lt;code class=&quot;highlighter-rouge&quot;&gt;.ini&lt;/code&gt; and will copy that into &lt;code class=&quot;highlighter-rouge&quot;&gt;%appdata%/pyRevit&lt;/code&gt; and will use as its default config.&lt;/p&gt;

&lt;p&gt;If no config is found under &lt;code class=&quot;highlighter-rouge&quot;&gt;%programdata%/pyRevit&lt;/code&gt; either, it will default to the hard-coded configuration as before.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Hope this help setting up pyRevit easier in your work environments.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Happy pyReviting :D&lt;/p&gt;
</description>
        <pubDate>Sat, 14 Oct 2017 11:00:00 -0700</pubDate>
        <link>http://eirannejad.github.io/pyRevit/pyrevit/update/2017/10/14/configupdate.html</link>
        <guid isPermaLink="true">http://eirannejad.github.io/pyRevit/pyrevit/update/2017/10/14/configupdate.html</guid>
        
        
        <category>pyrevit</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Managing pyRevit Extensions</title>
        <description>&lt;p&gt;Hello :D&lt;/p&gt;

&lt;p&gt;I just published a video explaining methods to control and manage your company wide extensions. If you’re involved in such a task, I highly encourage you to watch this as it explains the inner workings of the pyRevit Extension Manager and how to control access to your extensions:&lt;/p&gt;

&lt;div style=&quot;position: relative; width: 100%; height: 0px; padding-bottom: 60%;&quot;&gt;
&lt;iframe style=&quot;position: absolute; left: 0px; top: 0px; width: 100%; height: 100%&quot; src=&quot;https://www.youtube.com/embed/v8d5FA-7suw?showinfo=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;Here is the example of the dictionary key to control user access to your extensions (add it inside your own pyRevit extension definition file - watch the video if you don’t know how):&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# add as many users as need access to this extension&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# the usernames are Revit usernames (not necessarily/always the machine user name)&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;&quot;authusers&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;username1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;username2&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;username3&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;I also posted a video on using git to manage your source codes inside your extension and also as a way to share that with people outside your company:&lt;/p&gt;

&lt;div style=&quot;position: relative; width: 100%; height: 0px; padding-bottom: 60%;&quot;&gt;
&lt;iframe style=&quot;position: absolute; left: 0px; top: 0px; width: 100%; height: 100%&quot; src=&quot;https://www.youtube.com/embed/n8K-JXfmv-s?showinfo=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;
</description>
        <pubDate>Sun, 13 Aug 2017 11:00:00 -0700</pubDate>
        <link>http://eirannejad.github.io/pyRevit/pyrevit/extension/2017/08/13/managingextensions.html</link>
        <guid isPermaLink="true">http://eirannejad.github.io/pyRevit/pyrevit/extension/2017/08/13/managingextensions.html</guid>
        
        
        <category>pyrevit</category>
        
        <category>extension</category>
        
      </item>
    
      <item>
        <title>Installer update</title>
        <description>&lt;p&gt;I just pushed an update for the pyRevit installer to address these two issues:
&lt;a href=&quot;https://github.com/eirannejad/pyRevit/issues/209&quot;&gt;Issue #209&lt;/a&gt;
&lt;a href=&quot;https://github.com/eirannejad/pyRevit/issues/208&quot;&gt;Issue #208&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;&quot;&gt;&lt;strong&gt;See this video on pyRevit installer updates.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div style=&quot;position: relative; width: 100%; height: 0px; padding-bottom: 60%;&quot;&gt;
&lt;iframe style=&quot;position: absolute; left: 0px; top: 0px; width: 100%; height: 100%&quot; src=&quot;https://www.youtube.com/embed/L1GFOJAc7qE?showinfo=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;System admins can also use the &lt;code class=&quot;highlighter-rouge&quot;&gt;pyrevitgitservices.exe&lt;/code&gt; tool that is shipped with pyRevit to perform basic tasks on the pyRevit repository. &lt;a href=&quot;https://github.com/eirannejad/pyRevit/tree/master/release&quot;&gt;See this page for full documentation of the tool.&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For example this is how you can set the version of pyRevit repo using this tool:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-batch&quot;&gt;pyrevitgitservices.exe setversion &amp;lt;pyrevit_installation_path&amp;gt; &amp;lt;hash commit&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And as a more specific example, this would set the pyRevit repo version to &lt;a href=&quot;https://github.com/eirannejad/pyRevit/commit/71ec1e5d4588205ae0064e9b35ec10c3dc113248&quot;&gt;this commit&lt;/a&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-batch&quot;&gt;pyrevitgitservices.exe setversion &quot;C:\pyRevit&quot; 71ec1e5
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This new executive lives under:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;pyrevit install path&amp;gt;\release\pyrevitgitservices\pyrevitgitservices\bin\Release\&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Hope this change helps managing pyRevit in large environment a bit easier.&lt;/p&gt;
</description>
        <pubDate>Sat, 05 Aug 2017 11:00:00 -0700</pubDate>
        <link>http://eirannejad.github.io/pyRevit/pyrevit/update/2017/08/05/installerupdate.html</link>
        <guid isPermaLink="true">http://eirannejad.github.io/pyRevit/pyrevit/update/2017/08/05/installerupdate.html</guid>
        
        
        <category>pyrevit</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>pyRevit v4.4</title>
        <description>&lt;p&gt;Finally pyRevit 4.4 is here. Here is a list of the most important changes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Compatible with Revit 2018:&lt;/strong&gt; Yay (finally)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Adopted &lt;a href=&quot;http://revitpythonwrapper.readthedocs.io/en/latest/&quot;&gt;revitpythonwrapper&lt;/a&gt; module&lt;/strong&gt;: This means that you can import rpw in your pyRevit scripts without installing the &lt;code class=&quot;highlighter-rouge&quot;&gt;revitpythonwrapper&lt;/code&gt; extension. You should disable/remove the &lt;code class=&quot;highlighter-rouge&quot;&gt;revitpythonwrapper&lt;/code&gt; extension if you already have it. It’s not necessary anymore. The rpw inside pyRevit will be updated on a weekly basis to always have the most recent stable version. Read more below.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;pyRevit Installation for All or Current User:&lt;/strong&gt; Installer now has the option to install for &lt;em&gt;All Users&lt;/em&gt; versus for only the &lt;em&gt;Current user&lt;/em&gt;. Read more below.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Config File Naming:&lt;/strong&gt; pyRevit configuration and temporary files no longer include the username in the file naming. (e.g &lt;code class=&quot;highlighter-rouge&quot;&gt;pyRevit_eirannejad_config.ini&lt;/code&gt; is now &lt;code class=&quot;highlighter-rouge&quot;&gt;pyRevit_config.ini&lt;/code&gt;). This should help sysAdmins to push pyRevit configurations easier.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Zero Document mode:&lt;/strong&gt; A selection of pyRevit tools are now available in zero-document mode (e.g. You can access pyRevit settings even when no documents are open inside Revit. (this is done by setting &lt;code class=&quot;highlighter-rouge&quot;&gt;__context__ = 'zerodoc'&lt;/code&gt; inside your scripts)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;THIS UPDATE INCLUDES A CORE UPDATE AND NEEDS TO BE DONE WHEN REVIT IS CLOSED.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;&quot;&gt;&lt;strong&gt;See this video on how to update pyRevit.&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div style=&quot;position: relative; width: 100%; height: 0px; padding-bottom: 60%;&quot;&gt;
&lt;iframe style=&quot;position: absolute; left: 0px; top: 0px; width: 100%; height: 100%&quot; src=&quot;https://www.youtube.com/embed/9HIjzfY9xz8?showinfo=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2 id=&quot;rpw-revitpythonwrapper&quot;&gt;rpw &lt;a href=&quot;http://revitpythonwrapper.readthedocs.io/en/latest/&quot;&gt;(revitpythonwrapper)&lt;/a&gt;:&lt;/h2&gt;

&lt;p&gt;I talked about the change from &lt;code class=&quot;highlighter-rouge&quot;&gt;revitutils&lt;/code&gt; to &lt;code class=&quot;highlighter-rouge&quot;&gt;rpw&lt;/code&gt; in a previous post &lt;a href=&quot;http://eirannejad.github.io/pyRevit/pyrevit/update/2017/04/01/revitutilsimprovements.html&quot;&gt;(Read here)&lt;/a&gt;. I have started this process and as of now the &lt;code class=&quot;highlighter-rouge&quot;&gt;revitpythonwrapper&lt;/code&gt; module has been added to the pyRevit standard library. I will be working on upgrading the existing tools to use the rpw for Revit API access. Through this process we will improve the rpw further more so hopefully all you can have access to a more comprehensive wrapper for Revit API.&lt;/p&gt;

&lt;p&gt;As of now, you can import rpw in your scripts. Read the &lt;a href=&quot;http://revitpythonwrapper.readthedocs.io/en/latest/#basic-components&quot;&gt;Basic Components&lt;/a&gt; section on &lt;a href=&quot;http://revitpythonwrapper.readthedocs.io/en/latest/&quot;&gt;revitpythonwrapper website&lt;/a&gt; for more information on rpw’s capabilities.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2 id=&quot;pyrevit-installer-update&quot;&gt;pyRevit Installer Update:&lt;/h2&gt;

&lt;p&gt;pyRevit installer now includes an option to install pyRevit for All users or for the Current user only.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/embed/-hIMH_dIUuw&quot;&gt;&lt;strong&gt;See this video on how to install pyRevit using the new installer&lt;/strong&gt;&lt;/a&gt;&lt;/p&gt;

&lt;div style=&quot;position: relative; width: 100%; height: 0px; padding-bottom: 60%;&quot;&gt;
&lt;iframe style=&quot;position: absolute; left: 0px; top: 0px; width: 100%; height: 100%&quot; src=&quot;https://www.youtube.com/embed/9HIjzfY9xz8?showinfo=0&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;h3 id=&quot;for-sysadmins&quot;&gt;For sysAdmins:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;For GUI install:&lt;/strong&gt; The installer has the Current User / All Users option now and installation works&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;For Silent install:&lt;/strong&gt; I could not figure out a way to pass an option to the installer for silent installs. However since the &lt;code class=&quot;highlighter-rouge&quot;&gt;install_addin.bat&lt;/code&gt; now has a &lt;code class=&quot;highlighter-rouge&quot;&gt;--alluser&lt;/code&gt; options, the admin can:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;pre&gt;&lt;code class=&quot;language-batch&quot;&gt;REM Install using silent installer
pyRevitSetup-v4.exe /VERYSILENT /DIR=&quot;C:\pyRevit&quot;

REM then change directory to the release directory inside pyrevit repo
cd \D &quot;C:\pyRevit\pyRevit\release&quot;

REM remove the current addin files
uninstall_addin.bat

REM re-create the addin files using the --allusers option
install_addin.bat --allusers
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt; &lt;/p&gt;

&lt;h2 id=&quot;other-resolved-issues&quot;&gt;Other Resolved Issues:&lt;/h2&gt;

&lt;p&gt;Here is a list of issues that has been resolved in this update:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/eirannejad/pyRevit/issues/209&quot;&gt;Issue #209&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/eirannejad/pyRevit/issues/208&quot;&gt;Issue #208&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/eirannejad/pyRevit/issues/205&quot;&gt;Issue #205&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/eirannejad/pyRevit/issues/204&quot;&gt;Issue #204&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/eirannejad/pyRevit/issues/200&quot;&gt;Issue #200&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/eirannejad/pyRevit/issues/195&quot;&gt;Issue #195&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/eirannejad/pyRevit/issues/180&quot;&gt;Issue #180&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 04 Jul 2017 11:00:00 -0700</pubDate>
        <link>http://eirannejad.github.io/pyRevit/pyrevit/update/2017/07/04/pyrevitfourfour.html</link>
        <guid isPermaLink="true">http://eirannejad.github.io/pyRevit/pyrevit/update/2017/07/04/pyrevitfourfour.html</guid>
        
        
        <category>pyrevit</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Show Nested Groups Update</title>
        <description>&lt;p&gt;I updated the &lt;code class=&quot;highlighter-rouge&quot;&gt;Show Nested Group Structure&lt;/code&gt; tool today. Now it does what it’s supposed to do and also prints a nicer output with links to the groups:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://eirannejad.github.io/pyRevit/images/shownestedgroupstruct2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This tool works on selected elements of any kind (as long as they’re groupable) and is very helpful in finding out the group structure around selected elements.&lt;/p&gt;

&lt;p&gt; &lt;/p&gt;

&lt;p&gt;And here is where the tool is:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://eirannejad.github.io/pyRevit/images/shownestedgroupstruct1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 17 May 2017 11:00:00 -0700</pubDate>
        <link>http://eirannejad.github.io/pyRevit/pyrevit/update/2017/05/17/nestedgroupsupdate.html</link>
        <guid isPermaLink="true">http://eirannejad.github.io/pyRevit/pyrevit/update/2017/05/17/nestedgroupsupdate.html</guid>
        
        
        <category>pyrevit</category>
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
