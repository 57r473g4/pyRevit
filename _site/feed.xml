<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>pyRevit blog</title>
    <description>IronPython scripts for Autodesk Revit
</description>
    <link>http://eirannejad.github.io/pyRevit/</link>
    <atom:link href="http://eirannejad.github.io/pyRevit/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 10 Jan 2017 21:23:14 -0800</pubDate>
    <lastBuildDate>Tue, 10 Jan 2017 21:23:14 -0800</lastBuildDate>
    <generator>Jekyll v3.1.6</generator>
    
      <item>
        <title>Version 4 is available to download</title>
        <description>&lt;p&gt;Okay. The new installer is available on Github.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://eirannejad.github.io/pyRevit/images/Software Box-96.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/eirannejad/pyRevit/releases/download/v4.0-stable/pyRevitSetup-v4.exe&quot;&gt;Please download the setup file from here&lt;/a&gt; or from github &lt;a href=&quot;https://github.com/eirannejad/pyRevit/releases&quot;&gt;release page here&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Thu, 05 Jan 2017 14:00:00 -0800</pubDate>
        <link>http://eirannejad.github.io/pyRevit/pyrevit/update/2017/01/05/Newloader.html</link>
        <guid isPermaLink="true">http://eirannejad.github.io/pyRevit/pyrevit/update/2017/01/05/Newloader.html</guid>
        
        
        <category>pyrevit</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Straight to 4! Lots of changes coming up...</title>
        <description>&lt;p&gt;I’ve been improving the pyRevit core for the past 4 months and I’m ready now to publish the new pyRevit. The loader has been re-written from ground up (again) and is now much faster and more powerful.&lt;/p&gt;

&lt;p&gt;I’ll upload the installer tomorrow.&lt;/p&gt;

&lt;p&gt;Oh, btw,
The output window now has full emoji support! :D&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://eirannejad.github.io/pyRevit/images/2016-12-30 23_49_04-pyRevitinfooutput.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 30 Dec 2016 14:00:00 -0800</pubDate>
        <link>http://eirannejad.github.io/pyRevit/pyrevit/update/2016/12/30/lotsofchanges.html</link>
        <guid isPermaLink="true">http://eirannejad.github.io/pyRevit/pyrevit/update/2016/12/30/lotsofchanges.html</guid>
        
        
        <category>pyrevit</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Version 3 Beta is out!</title>
        <description>&lt;p&gt;After weeks of work I am pleased to announce that version 3-beta of pyRevit is out.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://eirannejad.github.io/pyRevit/images/Software Box-96.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/eirannejad/pyRevit/releases/download/v3betaSetup/pyRevitSetup-v3beta.exe&quot;&gt;Please download the setup file from here&lt;/a&gt; or from github &lt;a href=&quot;https://github.com/eirannejad/pyRevit/releases&quot;&gt;release page here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can install it anywhere you want however the default installation folder is &lt;code class=&quot;highlighter-rouge&quot;&gt;%appdata%/pyRevit/&lt;/code&gt; and the package will be installed under &lt;code class=&quot;highlighter-rouge&quot;&gt;pyRevit-v3beta&lt;/code&gt; folder. I like the user roaming folder since it makes the repository available at any machine I happen to log into.&lt;/p&gt;

&lt;p&gt;I’m looking forward to hearing your comments…&lt;/p&gt;
</description>
        <pubDate>Fri, 09 Sep 2016 15:00:00 -0700</pubDate>
        <link>http://eirannejad.github.io/pyRevit/pyrevit/update/2016/09/09/verthreebetaisout.html</link>
        <guid isPermaLink="true">http://eirannejad.github.io/pyRevit/pyrevit/update/2016/09/09/verthreebetaisout.html</guid>
        
        
        <category>pyrevit</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>More Updates on v3</title>
        <description>&lt;p&gt;There are a handful of pyRevit scripts that are pretty much identical and only differ by a line or two. Take the &lt;code class=&quot;highlighter-rouge&quot;&gt;pick&lt;/code&gt; tools for example. There are a couple of them under the &lt;code class=&quot;highlighter-rouge&quot;&gt;Select&lt;/code&gt; pulldown and each picks a centain element type. But the truth is that the underlying logic is the same in all these scripts and the only difference is one line of code that tells the script to pick a door or a window. This creates two problems:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;First is a maintenance issue. Every time I update one of the scripts, I need to make that same adjustment in all the script files.&lt;/li&gt;
  &lt;li&gt;Second is that I have 7 almost-identical script files that increases the load time and create 7 buttons in Revit UI that take up so much space and make the pulldowns harder to use. It’s not worth the screen real state and the load time overhead.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This problem has been solved now. How? Well, simple. Let’s take the &lt;code class=&quot;highlighter-rouge&quot;&gt;pick&lt;/code&gt; tool again as example. In pyRevit v3, instead of 7 buttons, there is only one pick tool. When clicked, it’ll show a list of options that you can select from. Here is how it looks like:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://eirannejad.github.io/pyRevit/images/combinedpick.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And here is the window that shows all the options for that tool:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://eirannejad.github.io/pyRevit/images/pickswitches.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I hate to increase the click count for the tools, so that’s why every one of the options listed in this &lt;strong&gt;&lt;em&gt;Options Window&lt;/em&gt;&lt;/strong&gt; is a button. So in pyRevit v3, one click on the &lt;code class=&quot;highlighter-rouge&quot;&gt;pick&lt;/code&gt; tool and then a click on &lt;code class=&quot;highlighter-rouge&quot;&gt;wall&lt;/code&gt; option button is equal too running the &lt;code class=&quot;highlighter-rouge&quot;&gt;pickWalls&lt;/code&gt; tool in pyRevit v2.&lt;/p&gt;

&lt;p&gt;One extra click, but more efficient and less wasted screen space. It’s also possible to add more options to these tools now without creating more Revit UI buttons.&lt;/p&gt;

&lt;p&gt;Here are a few more examples. All copy and paste tools have been replaced with a single &lt;code class=&quot;highlighter-rouge&quot;&gt;copyState&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;pasteState&lt;/code&gt; button:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://eirannejad.github.io/pyRevit/images/combinedcopypaste.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Here is the option window for the &lt;code class=&quot;highlighter-rouge&quot;&gt;pasteState&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://eirannejad.github.io/pyRevit/images/pasteswitches.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;And here are the option window for the &lt;code class=&quot;highlighter-rouge&quot;&gt;list&lt;/code&gt; tool (replacing the many individual &lt;code class=&quot;highlighter-rouge&quot;&gt;listXXX&lt;/code&gt; scripts), and also the &lt;code class=&quot;highlighter-rouge&quot;&gt;isolate&lt;/code&gt; tool:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://eirannejad.github.io/pyRevit/images/listswitches.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://eirannejad.github.io/pyRevit/images/isolateswitches.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 21 Aug 2016 15:00:00 -0700</pubDate>
        <link>http://eirannejad.github.io/pyRevit/pyrevit/update/2016/08/21/moreupdates.html</link>
        <guid isPermaLink="true">http://eirannejad.github.io/pyRevit/pyrevit/update/2016/08/21/moreupdates.html</guid>
        
        
        <category>pyrevit</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Why python?</title>
        <description>&lt;p&gt;Someone asked me why did I use python to program the tools and create this library. Here are my thoughts:&lt;/p&gt;

&lt;p&gt;You can select between a couple of programming languages to develop addins and tools for Revit. They’re: C#, Visual Basic, Ruby, and python.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ruby is heavily web oriented and has a less readable syntax for a newbie. It’s still no doubt incredibly powerful.&lt;/li&gt;
  &lt;li&gt;Visual Basic is old. It’s not worth the time investment for a newbie and you can only use it within the Microsoft ecosystem.&lt;/li&gt;
  &lt;li&gt;C# is a proper language built for enterprise applications. It has a steep learning curve and deals with very complex programming concepts which makes it a hard language use. Also C# programmers are expensive and that increases the overall cost of professional-grade software development and maintenance.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;but python, has a human readable syntax. It’s very easy to learn. It runs on most of the operating systems and is used as the scripting language for many professional CAD/BIM programs. It’s very easy to setup and it even comes pre-installed on Mac and Linux systems. You can use it to program your own personal computer (Mac, Windows, or Linux). It has a very simple I/O framework that you can utilize to keep your files and projects in decent order. You can use it in Revit, Dynamo for Revit, Rhino with Grasshopper, Blender for 3D graphics, and many more. You can even use it as a very powerful and handy calculator…It’s a better language if you’re an Architect…&lt;/p&gt;

&lt;p&gt;In my opinion, learning python is a good start and a better investment for an Architect overall. Of course you still have to learn how to use the Revit API (or API of other software using python for scripting) but still, python, is like a x-acto knife.&lt;/p&gt;

&lt;p&gt;Besides, most architecture companies are not very rich. They can’t afford C# programmers or a software development department and this means that they’re mostly stuck with out-of-the-box software which especially in case of Revit, lack some of the most basic tools (by 2016 standards e.g. proper selection tools). However, by using simple small tools they can save significant production time over the course of a year or so. I’ll publish more data on this in a few months.&lt;/p&gt;

&lt;p&gt;I’m hoping that this library encourages more architects to get into programming and start taking control of the programs that, right now, have a lot of undesired control over the A/E industry.&lt;/p&gt;

&lt;p&gt;Rise hackers, rise.&lt;/p&gt;
</description>
        <pubDate>Tue, 16 Aug 2016 16:00:00 -0700</pubDate>
        <link>http://eirannejad.github.io/pyRevit/pyrevit/2016/08/16/whypython.html</link>
        <guid isPermaLink="true">http://eirannejad.github.io/pyRevit/pyrevit/2016/08/16/whypython.html</guid>
        
        
        <category>pyrevit</category>
        
      </item>
    
      <item>
        <title>Semantic Versioning and pyRevit v3</title>
        <description>&lt;p&gt;Today I learned more about &lt;a href=&quot;http://semver.org&quot;&gt;Semantic Versioning &lt;/a&gt; and realized I’m incrementing the version numbers incorrectly in pyRevit.&lt;/p&gt;

&lt;p&gt;Semantic versioning proposes X.Y.Z (Major.Minor.Patch) format but also says when Y is incremented, Z must be reset to zero. But until now, I did not do any such resetting on the values.&lt;/p&gt;

&lt;p&gt;With the current versioning method, the X is for major backward-incompatible changes; Y is for new scripts added to the library; and Z is for all the minor patches and fixes to any of the scripts.&lt;/p&gt;

&lt;p&gt;Now to the more exciting part:&lt;/p&gt;

&lt;p&gt;We’re testing the pyRevit v3.0.0-alpha right now. The beta will be available soon and it has a few important changes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;pyRevit now supports Extensions! There is a package manager that handles installation/update/and removal of thrid-party extensions. &lt;a href=&quot;https://github.com/gtalarico&quot;&gt;Gui Talarico&lt;/a&gt; is working on the first of them and it’s called &lt;strong&gt;&lt;em&gt;PyRevitPlus&lt;/em&gt;&lt;/strong&gt;. Each extension will get its own tab. This means that you can create your own libraries of scripts and share them on github and other users can install them using the package manager.&lt;/li&gt;
  &lt;li&gt;If the current file naming convention is confusing for you, we’ve modified the startup script to work with scripts organized in folders. This means that instead of properly naming &lt;code class=&quot;highlighter-rouge&quot;&gt;*.png&lt;/code&gt; files to create panels and pulldown buttons, you can throw the scripts in a folder for the pulldown button and place that inside another folder for the panel. I’ll publish the details of this later.  &lt;strong&gt;&lt;em&gt;PyRevitPlus&lt;/em&gt;&lt;/strong&gt; will be organized under this system and it’s a great example.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;pyRevit now has a settings window. You can enable/disable Verbose reporting at startup, and the usage log system as of now.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://eirannejad.github.io/pyRevit/images/2016-08-16 18_18_07-pyRevit user settings.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;There is also a nicer About window with links to this website and credits.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://eirannejad.github.io/pyRevit/images/2016-08-16 18_17_54-About pyRevit.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;pyRevit v3 also has a better Install and Uninstall system. The setup package is a smaller download, it’s easier to use, and installs pyRevit in the &lt;code class=&quot;highlighter-rouge&quot;&gt;%appdata%&lt;/code&gt; folder by default. This means that pyRevit lives in the user roaming directory and follows a user about in an Active Directory environment. It is also only available to just the user that installs it. This can be useful if, for example, you have multiple Revit users on the same machine, who may need to run different configurations of pyRevit based on their Revit level of expertise.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Back to the semantic versioning. I’ll use it the right way starting with version 3.0.0 :)&lt;/p&gt;

&lt;p&gt;Stay tuned.&lt;/p&gt;
</description>
        <pubDate>Tue, 16 Aug 2016 10:00:00 -0700</pubDate>
        <link>http://eirannejad.github.io/pyRevit/pyrevit/update/2016/08/16/semantic-versioning.html</link>
        <guid isPermaLink="true">http://eirannejad.github.io/pyRevit/pyrevit/update/2016/08/16/semantic-versioning.html</guid>
        
        
        <category>pyrevit</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Copy/Paste Viewport placement tools</title>
        <description>&lt;p&gt;Hello again!!&lt;/p&gt;

&lt;p&gt;It’s been a while since my first post on this blog, so you know how excited I am right now to update you on the recent changes.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/gtalarico&quot;&gt;Gui Talarico&lt;/a&gt;, an awesome python programmer who is also heavily involved with BIM Automation and Scripting has started contributing to pyRevit and that’s very very exciting for me. He’s developed a host of amazing tools for the company that he’s working for and is also contributing and writing scripts for the pyRevit library on his own time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;em&gt;Teaser:&lt;/em&gt;&lt;/strong&gt; we’re working on modifying the pyRevit to be able to accept and automatically load ‘Extensions’ (meaning other third-party independent python script libraries). This gives developers and enthusiasts the ability to easily add their own workflow-specific scripts to the pyRevit library without any modifications to the original pyRevit repository and use other libraries shared by others and stay updated.&lt;/p&gt;

&lt;h3 id=&quot;new-scripts-for-matching-viewport-placement&quot;&gt;New scripts for matching viewport placement:&lt;/h3&gt;

&lt;p&gt;So I was saying, Gui, has developed two scripts for copying and pasting viewport placement from and onto viewports which tremendously helps with aligning viewports on multiple sheets. I also made the scripts smarter in regards to plan model views (Plan/RCP) and model space so it can place model views accurately and not based on their relative viewport centers and really based on their model space coordinates. This way you can place a 2nd floor plan view in the exact same spot as the 1st floor plan view on a sheet, independent of their relative crop boundaries and viewport centers.&lt;/p&gt;

&lt;p&gt;Make sure to test them out. These scripts are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Memory &amp;gt; Memory_copyViewportPlacement.py&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Memory &amp;gt; Memory_pasteViewportPlacement.py&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;http://eirannejad.github.io/pyRevit/images/copyviewportplacement.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;http://eirannejad.github.io/pyRevit/images/pasteviewportplacement.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 12 Aug 2016 10:00:00 -0700</pubDate>
        <link>http://eirannejad.github.io/pyRevit/pyrevit/update/2016/08/12/copypasteviewporttools.html</link>
        <guid isPermaLink="true">http://eirannejad.github.io/pyRevit/pyrevit/update/2016/08/12/copypasteviewporttools.html</guid>
        
        
        <category>pyrevit</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>First post: Welcome!</title>
        <description>&lt;p&gt;Hello!!&lt;/p&gt;

&lt;p&gt;Welcome to the pyRevit blog. I’ve been publishing changes and news to the github repository page for the past year but I feel it’s time for pyRevit to have its own blog now.&lt;/p&gt;

&lt;p&gt;So here is the first post :)&lt;/p&gt;

&lt;p&gt;And oh btw, pyRevit has a nice logo now! It’s an origami python since the new Revit logo is like an origami and python language logo is obviously two pythons.&lt;/p&gt;

&lt;p&gt;From the sidebar, you can download the current installer and see a list of pages documenting different aspects of pyRevit.&lt;/p&gt;

&lt;p&gt;From now on I’ll post all the new changes and work-in-progress tools here.&lt;/p&gt;

&lt;p&gt;Keep me posted on your thoughts!&lt;/p&gt;

&lt;p&gt;Best,&lt;/p&gt;
</description>
        <pubDate>Sat, 23 Jul 2016 10:00:00 -0700</pubDate>
        <link>http://eirannejad.github.io/pyRevit/pyrevit/update/2016/07/23/welcome-to-pyrevit.html</link>
        <guid isPermaLink="true">http://eirannejad.github.io/pyRevit/pyrevit/update/2016/07/23/welcome-to-pyrevit.html</guid>
        
        
        <category>pyrevit</category>
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
